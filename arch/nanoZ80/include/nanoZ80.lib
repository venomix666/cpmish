; nano-Z80 defines

; Global addresses
RAM_END         equ $FFFF       ; Top of RAM
INPUT_BUF       equ $FF00       ; Monitor input buffer
PAGE_CNT        equ $FFFE       ; SD card page counter
BOOT_PAGE       equ $FFFF       ; RAM page to boot from

; UART IO ports
UART_TX_DATA    equ $70         ; UART transmit data
UART_TX_READY   equ $71         ; UART transmit ready
UART_RX_DATA    equ $72         ; UART receive data
UART_RX_AVAIL   equ $73         ; UART receive data available
UART_B_TX_DATA	equ $04		; UART B transmit data, paged
UART_B_TX_READY equ $05		; UART B transmit ready, paged
UART_B_RX_DATA  equ $06		; UART B receive data
UART_B_RX_AVAIL equ $07		; UART B receive data available
UART_B_BAUD	equ $08		; UART B baud rate setting register

; IO mux ports and constants
ROM_DISABLE     equ $7e         ; ROM disable register, 1=ROM disabled
IO_BANK         equ $7f         ; IO bank selection register

IO_SELECT_LEDS  equ $00         ; IO bank value for LEDs
IO_SELECT_GPIO  equ $01         ; IO bank value for GPIO
IO_SELECT_USB   equ $02         ; IO bank value for USB HID
IO_SELECT_SD    equ $03         ; IO bank value for SD Card
IO_SELECT_VID   equ $04		; IO bank for video controller
IO_SELECT_UART  equ $05		; IO bank value for UART B
; LEDs IO ports
LEDS_REG        equ $00         ; LED registers, bits 0-6 control one LED each
WS2812_R        equ $01         ; WS2812 RED
WS2812_G        equ $02         ; WS2812 GREEN
WS2812_B        equ $03         ; WS2812 BLUE

; GPIO IO ports
GPIO_DATA1      equ $00         ; GPIO data register 1
GPIO_DATA2      equ $01         ; GPIO data register 2
GPIO_DIR1       equ $02         ; GPIO direction register 1
GPIO_DIR2       equ $03         ; GPIO direction register 2

; USB HID IO ports
USB_KEY_AVAIL   equ $00         ; USB keyboard input available
USB_KEY_CHAR    equ $01         ; USB keyboard data register
USB_KEY_MOD     equ $02         ; USB keyboard modifier keys
USB_MOUSE_BUT   equ $03         ; USB mouse buttons
USB_MOUSE_DX    equ $04         ; USB mouse dx
USB_MOUSE_DY    equ $05         ; USB mouse dy
USB_GAME_BUT1   equ $06         ; USB gamepad buttons reg 1
USB_GAME_BUT2   equ $07         ; USB gamepad buttons reg 2
USB_NEW_REP     equ $08         ; USB new report available
USB_DEV_TYPE    equ $09         ; USB device type
USB_ERROR       equ $0a         ; USB error
KB_AVAIL        equ $74         ; Keyboard character available, non-banked
KB_CHAR         equ $75         ; Keyboard character, non-banked

; SD Card interface IO ports
SD_ADDR_0       equ $00         ; SD card address (LSB)
SD_ADDR_1       equ $01         ; ..
SD_ADDR_2       equ $02         ; ..
SD_ADDR_3       equ $03         ; SD card address (MSB)
SD_BUSY         equ $04         ; SD card busy flag
SD_READ         equ $05         ; SD card read strobe
SD_WRITE        equ $06         ; SD card write stribe
SD_PAGE         equ $07         ; Select data page (0-3)
SD_STATUS       equ $08         ; SD card status
SD_TYPE         equ $09         ; SD card type
SD_DATA         equ $80         ; Start of data page ($80-$FF)

; Disk definitions
DRIVE_A_SIZE = 4*1024             ; kB
DRIVE_A_BLOCKS = DRIVE_A_SIZE / 16 ;/ 2 ; 2 kB blocks 

DRIVE_B_SIZE = 4*1024		; kB
DRIVE_B_BLOCKS = DRIVE_B_SIZE / 16 ; 16 kB blocks

SD_OFFSET_3 = 0x01
SD_OFFSET_2 = 0x00
SD_OFFSET_1 = 0x00
SD_OFFSET_0 = 0x00

; TTY/Video interface IO ports
VID_LINE                equ $00         ; Line avaialble for editing
VID_CURSOR_X            equ $01         ; Cursor X position
VID_CURSOR_Y            equ $02         ; Cursor Y position
VID_CURSOR_VIS          equ $03         ; Cursor visible
VID_SCROLL_UP           equ $04         ; Scroll up strobe
VID_SCROLL_DOWN         equ $05         ; Scroll down strobe
VID_WRITE_CHAR          equ $06         ; Write character to TTY
VID_BUSY                equ $07         ; TTY busy flag
VID_CLEAR_TO_EOL        equ $08         ; Clear to EOL strobe
VID_CLEAR_SCREEN        equ $09         ; Clear screen strobe
VID_ENABLED             equ $0a         ; Enably tty functions
VID_AUTOSCROLL          equ $0b         ; Enable autoscroll
VID_FG_RED              equ $10         ; Foreground red
VID_FG_GREEN            equ $11         ; Foreground green
VID_FG_BLUE             equ $12         ; Foreground blue
VID_BG_RED              equ $13         ; Background red
VID_BG_GREEN            equ $14         ; Background green
VID_BG_BLUE             equ $15         ; Background blue
VID_LINE_DATA           equ $80         ; Data on current line ($80-$CF)
VID_WRITE_X             equ $76         ; Always available TTY write
VID_BUSY_X              equ $77         ; Always avaialble TTY busy 


